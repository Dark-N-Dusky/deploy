services:
  traefik:
    image: traefik:v3.0
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--api.dashboard=true"
      # - "--certificatesresolvers.le.acme.httpchallenge=true"
      # - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      # - "--certificatesresolvers.le.acme.email=bryanchristy2016@gmail.com"
      # - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - 80:80
      - 443:443
      - 8081:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - "traefik-certificates:/letsencrypt"
    networks:
      - dz-network

  frontend:
    image: bryanchristy/dz-international-frontend:latest-prod
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      # - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      # - "traefik.http.routers.frontend.rule=Host(`domain.com`)"
      - "traefik.http.routers.frontend.rule=Host(`192.168.1.15`) || Host(`localhost`)"
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - dz-network

  backend:
    image: bryanchristy/dz-international-backend:latest-prod
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      # - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=3200"
      # - "traefik.http.routers.frontend.rule=Host(`api.domain.com`)"
      - "traefik.http.routers.frontend.rule=Host(`192.168.1.15/api`) || Host(`localhost`)"
    ports:
      - "3200:3200"
    depends_on:
      - postgres
      - mongo
    restart: unless-stopped
    networks:
      - dz-network

  postgres:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: d_z_international
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dz-network

  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    networks:
      - dz-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8085:8080
    networks:
      - dz-network

volumes:
  pgdata:
  mongodata:
  # traefik-certificates:

networks:
  dz-network:
